// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id                            String    @id @default(uuid())
  title                         String
  question                      String
  is_multiple                   Boolean
  can_change_vote               Boolean
  show_results_after_much_votes Int
  start_at                      DateTime
  end_at                        DateTime
  created_at                    DateTime  @default(now())
  updated_at                    DateTime  @updatedAt
  deleted_at                    DateTime?

  Vote   Vote[]
  Option Option[]

  @@map(name: "polls")

}

model Option {
  id          String   @id @default(uuid())
  poll        Poll     @relation(fields: [poll_id], references: [id])
  poll_id     String
  description String
  votes       Int      @default(0)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map(name: "options")
  @@index([poll_id])
}

model Vote {
  id         String    @id @default(uuid())
  poll       Poll      @relation(fields: [poll_id], references: [id])
  poll_id    String
  option_ids String[]
  user_id    String
  created_at DateTime
  updated_at DateTime
  deleted_at DateTime?

  @@unique([poll_id, user_id])
  @@map(name: "votes")
}
